pub struct Ram {
    mem: [u8; 4096]
}

impl Ram {
    pub fn new() -> Ram {
        let mut ram = Ram { mem: [0; 4096] };
        let sprites: [[u8; 5]; 16] = [
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "0"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "1"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "2"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "3"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "4"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "5"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "6"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "7"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "8"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "9"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "A"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "B"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "C"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "D"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "E"
            [0xf0, 0x90, 0x90, 0x90, 0xf0], // "F"
        ];
        return ram
    }
    pub fn write_byte(&mut self, address: u16, value: u8) {
        self.mem[address as usize] = value;
    }
    pub fn read_byte(&mut self, address: u16, value: u8) { }
}
